<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[request.getRequestDispatcher().forward(,)后代码继续执行]]></title>
    <url>%2F2017%2F12%2F02%2Frequest-getRequestDispatcher-forward-%E5%90%8E%E4%BB%A3%E7%A0%81%E7%BB%A7%E7%BB%AD%E6%89%A7%E8%A1%8C%2F</url>
    <content type="text"><![CDATA[request.getRequestDispatcher().forward(,)后别忘了后面的代码。： 在执行如上代码输入密码为111111的时候发现程序进了if(a)条件语句并在页面中显示“密码不能所有位数均相同” 但还是创建了账号保存在数据库中。 于是认为在执行完if(a)判断且进入执行里面的语句1request.getRequestDispatcher(&quot;counter.jsp&quot;).forward(request, response); 后，Servlet后面的代码仍会执行（执行了ins.Ins(user)以致创建了账号保存在数据库中）。 于是我给添加语句ins.Ins(user)加了一个if(!a)判断密码相同时不执行添加语句，问题解决，在输入密码格式错误时出现错误提示且没有执行添加的语句ins.Ins(user)。 在百度搜索后发现，确实Servlet在执行request.getRequestDispatcher().forward(,)后，后面的代码仍然会继续执行，且无论是request.getRequestDispatcher(path).forward(request, response)还是response.sendRedirect,程序都会在执行完该句的情况下继续向下执行。链接 当然后面出现的转发代码不会被执行，而是出现异常 java.lang.IllegalStateException: Cannot forward after response has been committed 如:]]></content>
      <categories>
        <category>Web学习笔记</category>
      </categories>
      <tags>
        <tag>先写十篇开个头</tag>
        <tag>Jsp</tag>
        <tag>Servlet</tag>
        <tag>转发</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Visio制作ER图学习笔记]]></title>
    <url>%2F2017%2F11%2F29%2FVisio%E5%88%B6%E4%BD%9CER%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[E-R图E-R图全称实体-联系图(Entity RelationshipDiagram)，提供了表示实体类型、属性和联系的方法，用来描述现实世界的概念模型。 百度百科 在建立复杂的数据库前，我们一般需要先建立一个模型以直观的展示自己的数据库设计来方便整理思路并能通过模型较为方便地分析自己的数据库是否合理。 使用Visio使用Visio2010来建立E-R图 选择软件和数据库,选择创建数据库模型图 拖动实体到绘图页面 选择拖动到绘图页面的实体框在坐下角选择定义，输入表名 输入表明后后点击列输入列名与列的数据类型选择是否必要是否为PK； 通过同样方法建其它表通过关系来创建表之间的关系 : : Ps:关于可移植数据类型和物理数据类型之间的选择以及驱动程序选项 在数据库模型图中设置和编辑数据类型]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>先写十篇开个头</tag>
        <tag>ER图</tag>
        <tag>Visio</tag>
        <tag>数据库设计</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux下GitHub Pages+Hexo搭建博客]]></title>
    <url>%2F2017%2F11%2F29%2FGitHub-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[#GitHub pages 先新建一个repository Repository name填GitHub名字.github.io如(weiboboCN.github.io） 选择setting 往下拉找到GitHub Pages 选择choose a theme选择自动生成的主页的样式选择一个主题后提交 至此一个初步的主页已经形成. 在浏览器输入weiboboCN.github.io即可进入自己最初的主页 主页文件为index.md 可以选着自己敲一个主页换掉index.md或者选择使用功能强大的工具Hexo来制作自己的主页 安装Hexo安装Hexo前需要安装Node.jsNode.js1$ sudo apt-get install nodejs npm1$ sudo apt-get install npm 安装Hexo1$ sudo npm install hexo-cli -g Hexo安装完成用Hexo建一个博客12$ Hexo init blog //创建一个博客放在blog文件夹$ npm install //安装依赖包 Hexo静态博客搭建+个人定制 Linux下使用Hexo搭建github博客 本地页面在根目录（blog）使用命令1$ hexo server 运行后在浏览器输入地址http://localhost:4000/即可浏览博客 把本地调整好的博客传到GitHub上修改根目录的_config.yml最后面的deploy里面的代码，其中yourname改为你的GitHub的名字（冒号和后面的值之间要有一个空格，很重要如type: git //不能为type:git）1234deploy: type: git repo: https://github.com/yourname/yourname.github.io.git branch: master 安装hexo-deployer-git使其能发布到GitHub上 [参考]https://hexo.io/docs/deployment.html 1$ npm install hexo-deployer-git --save 使用hexo d -g即可把本地的博客传到GitHub上1hexo d -g Done! Ps: hexo的基本使用和主题更换 hexo的使用文档 我使用的next主题 next主题的使用文档]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>先写十篇开个头</tag>
      </tags>
  </entry>
</search>
